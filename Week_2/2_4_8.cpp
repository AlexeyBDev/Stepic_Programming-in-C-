// Напишите функцию поиска первого вхождения шаблона в текст.В качестве первого параметра функция принимает 
// текст(C - style строка), в которой нужно искать шаблон.
// В качестве второго параметра строку - шаблон(C - style строка), которую нужно найти.Функция возвращает позицию
// первого вхождения строки - шаблона, если он присутствует в строке(помните, что в C++ принято считать с 0), и - 1, 
// если шаблона в тексте нет.
//
// Учтите, что пустой шаблон(строка длины 0) можно найти в любом месте текста.
//
// Требования к реализации : при выполнении данного задания вы можете определять любые вспомогательные 
// функции, если они вам нужны.Вводить или выводить что - либо не нужно.Реализовывать функцию main не нужно.

// Алгоритм
// 1. Считываем первый символ исходной строки
// 2. Считываем первый символ шаблона
// 3. Сравниваем символы
// 4. Если символы равны 
#include <iostream>

using namespace std;

int _strstr(const char *text, const char *pattern)
{ 
	//int counter = 0;
	for(int i = 0; text[i] != '\0'; ++i)
	{
		if (pattern[i] == '\0') return i;
		if (text[i] == pattern[0]) {
			for (int n = 0; pattern[n] != '\0'; ++n)
				if (text[i + n] != pattern[n]) break;
			return i;
		}
		/*else {
			counter = 0;
		}*/
	}
	return -1;
}

int main(int argc, char* argv[])
{
	char text[] = "Hello world!";
	char pat[] = "lo";
	cout << _strstr(text, pat) << endl;

	return 0;
}
